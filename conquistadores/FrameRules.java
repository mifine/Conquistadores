package conquistadores;

/**
 *
 * @author mifine
 */
public class FrameRules extends javax.swing.JFrame {

    /**
     * Creates new form FrameAbout
     */
    public FrameRules() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Rules");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("You are a newcomer on an island. Only few native people live in this island. \n\nYour goal is to conquier the maximum number of areas in the island before \nyour opponent. \n\nYou occupies 10 cases at the begining of the game. Your opponent also. \nThe native people occupies 5 cases. \n\nEach of your cases contains 5 people. \nEach of the opponent cases contains 5 people. \nNative people are not a lot, so each case where they are present \ncontains 5 people. \n\nGame Turn : \n- During each turn, you can perform 5 actions. \n- An action corresponds to: MOVE or ATTACK. \n- Move: you can move up to 5 people from a single case to an adjacent case. \nAt least 1 people must stay in the case. \n- Attack: if you have more that 1 people in a case, you can attack an \nadjacent case. \n- End turn: \nIf you have performed 5 actions, your turn ends. It is now your opponent's\nturn\n- Native people turn:\nNative people are pacifist people, they will not attack. But they defend,\nand they grow each turn by 2 additional people. \n- Growth:\nAs the time goes, your population increases by 1 people per case at the \nbegining of each turn. \n\n- TOTAL POINTS:\nTotal points is calculated with the folowwing formula:\nPOINTS = Number of Cases * 10 + Number of People\n");
        jTextArea1.setEnabled(false);
        jTextArea1.setSelectionColor(new java.awt.Color(102, 153, 255));
        jScrollPane2.setViewportView(jTextArea1);

        jLabel1.setText("How to play ?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
